mport logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler,
    filters, ContextTypes
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ß—Ç–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_allowed_users(filename='allowed_users.txt'):
    try:
        with open(filename, 'r') as f:
            return set(int(line.split('#')[0].strip()) for line in f if line.strip())
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ allowed_users.txt: {e}")
        return set()

allowed_users = load_allowed_users()
admin_id = next(iter(allowed_users), None)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in allowed_users:
        await context.bot.send_message(
            chat_id=admin_id,
            text=f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id} (@{update.effective_user.username})"
        )
        await update.message.reply_text("‚è≥ –û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        return

    keyboard = [
        [InlineKeyboardButton("üìò –¢–µ—Å—Ç –î–∞–Ω–∞", callback_data='dana')],
        [InlineKeyboardButton("üìô –¢–µ—Å—Ç –®—ã–Ω—Ç–∞—Å–æ–≤", callback_data='shyntasov')]
    ]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ —Ç–µ—Å—Ç:", reply_markup=InlineKeyboardMarkup(keyboard))

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ—Å—Ç–∞
async def handle_quiz_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    quiz_name = query.data
    await query.edit_message_text(f"üìã –í—ã–±—Ä–∞–Ω —Ç–µ—Å—Ç: {quiz_name}\n(–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–Ω—ë—Ç—Å—è –∑–¥–µ—Å—å...)")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    import os
    TOKEN = os.getenv("BOT_TOKEN", "7921542577:AAHq0tDhUeqs3aDJsmgNAdT613b4YLyMnpY")

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_quiz_selection))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
